# vim: filetype=python
#
# This file is the default set of rules to compile a Pebble application.
#
# Feel free to customize this to your needs.
#
import os.path

top = '.'
out = 'build'


def options(ctx):
	ctx.load('pebble_sdk')


def configure(ctx):
	"""
	This method is used to configure your build. ctx.load(`pebble_sdk`) automatically configures
	a build for each valid platform in `targetPlatforms`. Platform-specific configuration: add your
	change after calling ctx.load('pebble_sdk') and make sure to set the correct environment first.
	Universal configuration: add your change prior to calling ctx.load('pebble_sdk').
	"""

	# Applies to both models
	ctx.define('HEAP_SIZE_KB', 36)
	ctx.define('PEBBLE_ENDIAN_H', 1)

	ctx.load('pebble_sdk')

	# Applies only to Chalk
	ctx.env = ctx.all_envs['chalk']
	ctx.define('WIDTH', 180)
	ctx.define('HEIGHT', 180)

	# Applies only to Basalt
	ctx.env = ctx.all_envs['basalt']
	ctx.define('WIDTH', 144)
	ctx.define('HEIGHT', 168)

def build(ctx):
	ctx.load('pebble_sdk')

	build_worker = os.path.exists('worker_src')
	binaries = []

	cached_env = ctx.env
	for platform in ctx.env.TARGET_PLATFORMS:
		ctx.env = ctx.all_envs[platform]
		ctx.set_group(ctx.env.PLATFORM_NAME)

		app_elf = '{}/pebble-app.elf'.format(ctx.env.BUILD_DIR)
		ctx.pbl_program(source=ctx.path.ant_glob('src/**/*.c') + ['../tinf/src/adler32.c',
				'../tinf/src/crc32.c', '../tinf/src/tinflate.c', '../tinf/src/tinfzlib.c',
				'../heap.c', '../choreography.c', '../graphics.c', '../anim.c', '../scene.c',
				'../wad.c', '../mbit.c'], target=app_elf)

		if build_worker:
			worker_elf = '{}/pebble-worker.elf'.format(ctx.env.BUILD_DIR)
			binaries.append({'platform': platform, 'app_elf': app_elf, 'worker_elf': worker_elf})
			ctx.pbl_worker(source=ctx.path.ant_glob('worker_src/**/*.c'), target=worker_elf)
		else:
			binaries.append({'platform': platform, 'app_elf': app_elf})
	ctx.env = cached_env

	ctx.set_group('bundle')
	ctx.pbl_bundle(binaries=binaries,
				   js=ctx.path.ant_glob(['src/js/**/*.js', 'src/js/**/*.json']),
				   js_entry_file='src/js/app.js')
